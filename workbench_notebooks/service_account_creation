
main:
    params: [input]
    steps:
    - get_inputs:
        assign:
            - service_account_name: ${map.get(input, "name")}
            - service_account_display_name: ${default(map.get(input, "display_name"), Null)}
            - service_account_description: ${default(map.get(input, "display_description"), Null)}
            - project_id: ${default(map.get(input, "project_id"), sys.get_env("GOOGLE_CLOUD_PROJECT_ID"))}

    - format_name:
        assign:

            - name: ${text.replace_all(service_account_name, "_", "-")}
            #check there are no non alphanumeric characters/dashes so that it follows "^[a-z](?:[-a-z0-9]{4,28}[a-z0-9])$"
            # this helps when we have users with characters like ' in their name
            - name: ${text.replace_all_regex(name, "[^-a-z0-9]", "")}
            # make sure the first character is not a number
            - name: ${text.replace_all_regex(name, "^[^a-z]{1}", "")}
            # make sure that the name is limited to 30 characters
            - name: ${text.substring(name, 0, 30)}
            # make sure the end of the name is not a dash
            - name: ${text.replace_all_regex(name, "[^a-z0-9]$", "")}

    - create_service_account:
        call: http.post
        args:
            url: ${"https://iam.googleapis.com/v1/projects/" + project_id + "/serviceAccounts"}
            auth:
                type: OAuth2
                scopes: 'https://www.googleapis.com/auth/cloud-platform'
            body:
                accountId: ${name}
                serviceAccount: 
                    description: ${service_account_description}
                    displayName: ${service_account_display_name}
        result: post_response    

        
    
    - return_output:
            return: '${post_response}'
